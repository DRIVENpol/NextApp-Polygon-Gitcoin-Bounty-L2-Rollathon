import { RequiredParam } from "../types";
import { ChainId, IStorage, NetworkOrSignerOrProvider, SDKOptions, SUPPORTED_CHAIN_ID, ThirdwebSDK } from "@thirdweb-dev/sdk";
import { Signer } from "ethers";
import React from "react";
export interface ThirdwebSDKProviderProps {
    desiredChainId: RequiredParam<ChainId>;
    sdkOptions?: SDKOptions;
    storageInterface?: IStorage;
    signer?: Signer;
    provider: NetworkOrSignerOrProvider;
}
/**
 * A barebones wrapper around the Thirdweb SDK.
 *
 * You can use this in order to be able to pass a provider & signer directly to the SDK.
 *
 * @remarks Utilizing this provider will mean hooks for wallet management are not available, if you need those please use the {@link ThirdwebProvider} instead.
 *
 * @beta
 */
export declare const ThirdwebSDKProvider: React.FC<React.PropsWithChildren<ThirdwebSDKProviderProps>>;
/**
 *
 * @returns {@link ThirdwebSDK}
 * @internal
 */
export declare function useSDK(): ThirdwebSDK | undefined;
/**
 *
 * @internal
 */
export declare function useDesiredChainId(): number;
/**
 *
 * @internal
 */
export declare function useActiveChainId(): SUPPORTED_CHAIN_ID | undefined;
